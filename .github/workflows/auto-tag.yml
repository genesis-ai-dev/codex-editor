name: Auto Tag on Version Change

on:
    push:
        branches: [main]
        paths: ["package.json"]

# Need to create tag refs via API
permissions:
    contents: write

jobs:
    create-tag:
        runs-on: ubuntu-latest
        steps:
            - name: Determine version change without checkout
              id: version
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  REPO: ${{ github.repository }}
                  BEFORE: ${{ github.event.before }}
                  AFTER: ${{ github.sha }}
              run: |
                  set -euo pipefail

                  fetch_pkg() {
                    # Fetch package.json at a specific ref and decode
                    curl -sSf \
                      -H "Authorization: Bearer ${GH_TOKEN}" \
                      -H "Accept: application/vnd.github+json" \
                      "https://api.github.com/repos/${REPO}/contents/package.json?ref=$1" \
                    | jq -r '.content' | base64 -d
                  }

                  # Current version (after)
                  CURR_JSON=$(fetch_pkg "${AFTER}")
                  CURR_VERSION=$(printf '%s' "$CURR_JSON" | jq -r '.version')

                  # Previous version (before). May not exist (e.g., first commit touching package.json)
                  set +e
                  PREV_JSON=$(fetch_pkg "${BEFORE}" 2>/dev/null)
                  status=$?
                  set -e
                  if [ $status -ne 0 ] || [ -z "${PREV_JSON:-}" ]; then
                    PREV_VERSION="none"
                  else
                    PREV_VERSION=$(printf '%s' "$PREV_JSON" | jq -r '.version // "none"')
                  fi

                  echo "current=$CURR_VERSION"
                  echo "previous=$PREV_VERSION"

                  if [ "$CURR_VERSION" != "$PREV_VERSION" ]; then
                    echo "changed=true" >> "$GITHUB_OUTPUT"
                    echo "version=$CURR_VERSION" >> "$GITHUB_OUTPUT"
                  else
                    echo "changed=false" >> "$GITHUB_OUTPUT"
                  fi

            - name: Create tag ref via GitHub API
              if: steps.version.outputs.changed == 'true'
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  REPO: ${{ github.repository }}
                  VERSION: ${{ steps.version.outputs.version }}
                  SHA: ${{ github.sha }}
              run: |
                  set -euo pipefail

                  # Enforce numeric-only tag naming (no 'v' prefix)
                  if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
                    echo "Version '$VERSION' is not numeric SemVer; aborting." >&2
                    exit 1
                  fi

                  # Skip if tag already exists
                  if curl -s -H "Authorization: Bearer ${GH_TOKEN}" \
                       -H "Accept: application/vnd.github+json" \
                       "https://api.github.com/repos/${REPO}/git/refs/tags/${VERSION}" \
                       | jq -e '.ref' >/dev/null 2>&1; then
                    echo "Tag ${VERSION} already exists; skipping."
                    exit 0
                  fi

                  # Create a lightweight tag pointing to the pushed commit
                  curl -sSf -X POST \
                    -H "Authorization: Bearer ${GH_TOKEN}" \
                    -H "Accept: application/vnd.github+json" \
                    -d "{\"ref\":\"refs/tags/${VERSION}\",\"sha\":\"${SHA}\"}" \
                    "https://api.github.com/repos/${REPO}/git/refs"

                  echo "âœ… Created tag ${VERSION} -> ${SHA}"
